/*
 * httpbin.org
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CookiesApi
 */
@Disabled
public class CookiesApiTest {

    private static CookiesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CookiesApi(apiClient);
    }

    /**
     * Deletes cookie(s) as provided by the query string and redirects to cookie list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRedirectToCookieListTest() throws ApiException {
        Map<String, String> freeform = null;
        api.deleteRedirectToCookieList()
                .freeform(freeform)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns cookie data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDataTest() throws ApiException {
        api.getData()
                .execute();
        // TODO: test validations
    }

    /**
     * Sets a cookie and redirects to cookie list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setCookieRedirectTest() throws ApiException {
        String name = null;
        String value = null;
        api.setCookieRedirect(name, value)
                .execute();
        // TODO: test validations
    }

    /**
     * Sets cookie(s) as provided by the query string and redirects to cookie list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setRedirectTest() throws ApiException {
        Map<String, String> freeform = null;
        api.setRedirect()
                .freeform(freeform)
                .execute();
        // TODO: test validations
    }

}
